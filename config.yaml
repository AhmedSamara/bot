drive_motors:  # [deprecated: will be using DMCC motors soon; TODO: Need DMCC board, motor nums to be specified]
- {GPIO: 117, PWM: 0, position: front_right}  # Drive motor 0: P9_31 (pwm0/ehr0A), P9_25 (gpio117)
- {GPIO: 115, PWM: 1, position: front_left}   # Drive motor 1: P9_29 (pwm1/ehr0B), P9_27 (gpio115)
- {GPIO: 47, PWM: 5, position: back_left}     # Drive motor 2: P8_19 (pwm5/ehr2B), P8_15 (gpio47)
- {GPIO: 45, PWM: 6, position: back_right}    # Drive motor 3: P8_13 (pwm6/ehr2A), P8_11 (gpio45)
turret_servos:
- {PWM: 2, axis: yaw}  # Turret servo - pan: P9_42 (pwm2/ecap0)
- {PWM: 7, axis: pitch}  # Turret servo - tilt: P9_28 (pwm7/ecap2)
gun: {
    max_trigger_duration: 0.25,  # Maximum duration a trigger pin can be high
    laser_gpio: 8,  # Gun laser: P8_35 (gpio8)
    motor_gpios: {
        left: 78,  # Gun motor - left: P8_37 (gpio78)
        right: 76  # Gun motor - right: P8_39 (gpio76)
    },
    trigger_gpios: {
        retract: 74,  # Gun trigger - retract: P8_41 (gpio74)
        advance: 72   # Gun trigger - advance: P8_43 (gpio72)
    }
}
ultrasonics: {  # locations are [x, y] in meters, assume approx. 30cm x 30cm bot with right = +X axis, top = +Y axis
    front: { gpio: -1, location: [  0.0,  0.15], direction: [ 0.0,  1.0] },
    left:  { gpio: -1, location: [-0.15,     0], direction: [-1.0,  0.0] },
    back:  { gpio: -1, location: [  0.0, -0.15], direction: [ 0.0, -1.0] },
    right: { gpio: -1, location: [ 15.0,   0.0], direction: [ 1.0,  0.0] },
}
ir_select_gpios: [44, 26, 46, 65]  # GPIOs to select IR sensor units: [P8_12 (gpio44), P8_14 (gpio26), P8_16 (gpio46), P8_18 (gpio65)]
ir_analog_input_gpios: {front: 39, right: 35}  # GPIO pins to read selected IR sensor units: P8_04 (gpio39), P8_06 (gpio35)
ir_analog_adc_config: {  # ADC configuration
    i2c_bus: 1,  # System I2C bus to use to talk to ADCs
    i2c_addr: {front: 0x50, right: 0x51},  # I2C (7-bit) addresses for ADCs: 0x50, 0x51
    i2c_registers: {  # Register addresses, num bytes and initial values to set (if any)
        alert_status     : { addr: 0x01, bytes: 1},
        configuration    : { addr: 0x02, bytes: 1, init: 0x2d },    # 0x2d: Fastest cycle time, no alert hold, alert flag & pin enabled, active high
        v_low            : { addr: 0x03, bytes: 2, init: 0x0000 },  # Low threshold
        v_high           : { addr: 0x04, bytes: 2, init: 0x0750 },  # High threshold
        v_hyst           : { addr: 0x05, bytes: 2, init: 0x0080 },  # Difference to clear alert bit
        v_min            : { addr: 0x06, bytes: 2, init: 0x0fff },  # Min conversion result (NOTE: Doc says 0x0fff, but should be 0xff0?)
        v_max            : { addr: 0x07, bytes: 2, init: 0x0000 }   # Max conversion result
    },
    result_addr: 0x00,  # Register address where conversion result is stored (2 bytes)
    result_mask: 0x0ff0,  # Mask to apply to conversion result
    result_shift: 4,  # No. of bits to shift to the right after applying mask
}
ir_digital_input_gpios: {back: 67, left: 68}  # GPIO pins to read selected IR sensor units: P8_08 (gpio67), P8_10 (gpio68)
logging: {log_file: logs/bot.log, file_handler_level: DEBUG, stream_handler_level: INFO}  # Logging options
strategy: planner/strategies/strategy0.yaml
targeting: gunner/targeting/targeting0.yaml
test_pwm_base_dir: simulator/pins/pwm/pwm
test_gpio_base_dir: simulator/pins/gpio/gpio
test_adc_base_dir: simulator/pins/adc
fsm_tests: ./planner/tests/input/RobotNormalTest.txt
testing: false
server_protocol: tcp
server_bind_host: "*"  # Special hostname servers bind to, for listening on all interfaces
server_host: 127.0.0.1  # Default hostname clients connect to
server_port: 60000  # (Primary) ControlServer port
pub_server_pub_port: 60001  # PubServer published bot data on this port
pub_server_topic_port: 60002  # PubServer is told topics to set on this port
irs_per_array: 16
